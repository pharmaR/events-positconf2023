# 📣 Updates {transition="slide-in none"}

## 🗝 Key Policy Updates!

> If nothing else, take this home!

- The FDA appears to accept `.R` files through their eSUB portal[^1].
- The FDA has released a draft of a new _Computer Software Assurance[^2]_ guideline
  that seems to be increasingly the basis for their evaluation of R.

[^1]: [R Consortium R Submission WG, Pilot #1](https://github.com/RConsortium/submissions-pilot1)
[^2]: [_Computer Software Assurance for Production and Quality Systems Software: Draft Guidance for Industry and Food and Drug Administration Staff_](https://www.fda.gov/media/161521/download)

## 🗝 Key Policy Updates!

> If nothing else, take this home!

::: {.callout-tip}
## Identifying Intended Use [^2]

Software is used **directly** for the production and quality systems' 
automation inspection, testing, or the collection and processing of 
production data. Software **supports** development, monitoring and 
automated testing. _A manufacturer_ should use a **risk-based analysis
to determine appropriate assurance activities.**
:::

## 🗝 Key Policy Updates!

> If nothing else, take this home!

::: {.callout-tip}
## Determining the Appropriate Assurance Activities[^2]

Assurance can include _Ad-hoc testing_, _Exploratory testing_ (active package use), 
_Error-guessing_ (regression testing), 
_Robust scripted testing_ and _Limited scripted testing_ (traceable, reproducible testing suites).

"This approach may apply scripted testing for high-risk features"
:::

## Change of Leadership

- You may have noticed that I am not Andy Nicholls. 
- Last year, Andy decided to step down to focus on his growing responsibilities
  as Head of Data Science at GSK

## Pulse Check

- We looked back on how we had been working
- Identified new opportunities
  1. Refining holistic strategic direction
  1. Be mindful about communication and organization
- We have a new Communication workstream! (and awesome new slides!)
- More ways to get involved

# 📜 Workstream Report

## R Validation Hub Case Studies



## ![](assets/riskmetric.png){height="1.8em" width="1.8em" style="margin: 0 0.2em; object-fit: contain;vertical-align: middle;"} `{riskmetric}`



## ![](assets/riskassessment.png){height="1.8em" width="1.8em" style="margin: 0 0.2em; object-fit: contain;vertical-align: middle;"} `{riskassessment}`

# 📦 Repositories Workstream

## Repositories Workstream

::: { style="font-size: 0.8em;" }
> Supporting a transparent, open, dynamic, cross-industry approach of
> establishing and maintaining a _repository_ of R packages.

* Taking ample time to engage stakeholders
  * Validation leads across the industry
  * Active health authority involvement
  * Analytic environment admins and developers
* Considering the possibilities
  * Mapping needs to solutions that meet the industry where it is
  * ...while building the path for it to move forward
:::


## How did we get here?

::: {.incremental style="font-size: 0.8em;"}
* [Our whitepaper is widely adopted]{.fragment .semi-fade-out}
* [But implementing it is inconsistent & laborious]{.fragment .semi-fade-out}   
  * [Variations throughout industry pose uncertainty]{.fragment .semi-fade-out}
  * [Sharing software with health authorities is a challenge]{.fragment .semi-fade-out}
  * [Health authorities, overwhelmed by technical inconsistencies, are more likely to question software use]{.fragment .semi-fade-out}
* We feel the most productive path forward is a shared ecosystem
:::

::: {.notes}
- **inconsistent**: Vendored choices inevitably face inconsistency when
  merged with internally developed tools
- **sharing**: `pkglite`, `.R` files now permitted, Hosting on git repo/r-universe? But comes with extra install steps.
- **laborious**: We're all reviewing the same tools, duplicating effort and
:::


## Old dog, new trick

::: {.inremental}
* Modern package ecosystems are the stats world's _new trick_
* Methods are provided directly by statisticians and academics, rarely by vendors.
* Risk is managed not by itemized requirements, but by good development practices.[^2]
* We need to learn how to manage risk in a constantly evolving ecosystem
:::

[^2]: [_Computer Software Assurance for Production and Quality Systems Software: Draft Guidance for Industry and Food and Drug Administration Staff_](https://www.fda.gov/media/161521/download)

::: {.notes}
- **evolving**: 
  - Patches constantly fixing edge cases. Neglect to update is a risk.
  - Health authorities use latest CRAN. Differences
    in their system and yours introduces risk of inconsistency in results.
:::


## Different strokes

::::: {style="font-size: 0.7em;"}
:::: {.columns}
::: {.column width="50%"}
##### Vendored Stats Products
:::
::: {.column width="50%"}
##### Data Science Ecosystem
:::
::::


:::: {.columns .fragment}
::: {.column width="50%"}
* Of-the-shelf [**cohort**]{style="color: green;"}.
:::
::: {.column width="50%"}
* A "snapshot" of [**living repository**]{style="color: green"}.
:::
::::

:::: {.columns .fragment}
::: {.column width="50%"}
* Internal tools developed [**against cohort**]{style="color: color-mix(in lch, green 80%, red)"} 
  packages.
:::
::: {.column width="50%"}
* Internal tools developed [**against latest**]{style="color: green;"} 
  packages.
:::
::::

:::: {.columns .fragment}
::: {.column width="50%"}
* New package versions [**risk incompatibility**]{style="color: color-mix(in lch, green 60%, red)"}.
:::
::: {.column width="50%"}
* New packages can be [**reviewed and upgraded at-will**]{style="color: green;"}.
:::
::::

:::: {.columns .fragment}
::: {.column width="50%"}
* Steep [**upgrade cost (time, developement)**]{style="color: color-mix(in lch, green 40%, red)"}.
:::
::: {.column width="50%"}
* Living ecosystem, constantly [**vetted against new releases**]{style="color: green;"}
:::
::::

:::: {.columns .fragment}
::: {.column width="50%"}
* [**System-specific mix of packages**]{style="color: color-mix(in lch, green 20%, red)"}.
:::
::: {.column width="50%"}
* [**More likely what is used by HAs**]{style="color: green;"}
:::
::::
:::::


## What does a solution look like?

::: {.callout-note}
## If it's not broke, don't fix it!
:::

::: {.incremental style="font-size: 0.8em;"}
- R has this wonderful thing called CRAN, setting the standard of quality
  - Packages are constantly tested together
  - R has a culture of amazing documentation
  - Statisticians flock to R, and are constantly vetting its implementations
:::


## What does a solution look like?

::: {.callout-warning}
## Fool me twice, shame on me
:::

::: {.incremental style="font-size: 0.8em;"}
- R has this thorn in its side called CRAN, 
  - Builds are difficult to reproduce (key for validation)
  - Quality indicators are lacking
  - Difficult to roll back to an older snapshot (although tools exist to help with this.)
  - Governance isn't always the most friendly
:::


## What does a solution look like?

::: {.callout-tip}
## Closing the CRAN gap for the Pharma Use Case
:::

- Reproducibility guidelines
- Standard, public assessment of packages
- Avenues for communicating about implementations, bugs, security


## The Proposal so Far

![](assets/repository-diagram.svg){.r-stretch}

## Repositories Workstream
### Work to-date

1. Stakeholder engagement [3mo]{.dim}
2. Product refinement and proof-of-concept planning [1mo]{.dim}
3. POC development [2mo]{.dim}


